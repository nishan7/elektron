# Use an official Python runtime as a parent image
FROM python:3.9-slim

# Set the working directory in the container
WORKDIR /app

# Create a requirements file specifically for this container
RUN echo "paho-mqtt>=2.0.0\nrequests==2.31.0" > /app/requirements.txt

# Install required packages and network troubleshooting tools
RUN pip install --no-cache-dir -r /app/requirements.txt && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
    iputils-ping \
    net-tools \
    netcat-openbsd \
    dnsutils \
    && rm -rf /var/lib/apt/lists/*

# Copy the utils directory into the container (volume mount will overwrite this)
COPY ./utils /app/utils

# Make directories for frontend data
RUN mkdir -p /app/frontend/public
RUN mkdir -p /app/shared_data

# Set MQTT broker environment variables
ENV MQTT_BROKER_HOST=mqtt
ENV MQTT_BROKER_PORT=1883

# Command to run the script with better error handling
CMD python -u /app/utils/live_mqtt_reader.py || (echo "Script failed but container will remain running" && tail -f /dev/null) 